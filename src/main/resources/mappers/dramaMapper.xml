<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="dramaMapper"> 
  	<resultMap type="DramaListDTO" id="dramalistDTO"/>
 	<resultMap type="CompanyDTO" id="companyDTO"/>
  	<resultMap type="ReviewDTO" id="reviewDTO"/>
  	<resultMap type="QnaDTO" id="qnaDTO"/>
  	<resultMap type="DramaDTO" id="dramaDTO">
  		<id property="drama_num" column="drama_num"/>
  		<result property="company_num" column="company_num"/>
  		<result property="title" column="title"/>
  		<result property="contents" column="contents"/>
  		<result property="place" column="place"/>
  		<result property="price" column="price"/>
  		<result property="buy_hit" column="buy_hit"/>
  		<result property="file_num" column="file_num"/>
  	</resultMap>
  	<select id="totalCount" resultType="int">
		select nvl(count(drama_num), 0) from drama
		<if test="kind == 'title'">
			where title like #{search}
		</if>
	
		<if test="kind == 'contents'">
			where contents like #{search}
		</if>
  	</select>
  
  	<select id="selectList" parameterType="java.util.Map" resultType="DramaDTO">
  		select * from
  		(select rownum R, N.* from
  		(select * from drama
  		
  		<if test="kind == 'title'">
  		where title like '%'||#{search}||'%'
  		</if> 
  		
  		<if test="kind == 'contents'">
  		where title like '%'||#{search}||'%'
  		</if>
  		order by drama_num desc) N)
  		where R between #{startRow} and #{lastRow}
  	</select>
  		
	<insert id="insert" parameterType="com.theater.drama.DramaDTO">
		<selectKey keyProperty="file_num" resultType="int" order="BEFORE">
  			select file_num.nextval from dual
  		</selectKey>
		insert into drama values(
			drama_num.nextval,#{company_num},
			#{title}, #{contents}, #{place}, #{price}, 0, #{file_num}
		)  	
  	</insert> 
 
 	<select id="selectOne" parameterType="int" resultMap="dramaDTO">
  		select * from drama where drama_num=#{drama_num}
  	</select>
  	<select id="dateList" parameterType="com.theater.util.RowNum" resultMap="dramalistDTO">
  		select * from date_list where drama_num=#{drama_num} order by drama_time asc
  	</select>
  	<select id="searchCompany_num" parameterType="int" resultType="int">
  		select company_num from drama where drama_num=#{drama_num}
  	</select>
  	<select id="ticket_sell" parameterType="int" resultType="int">
  		select (row_num * col_num) from company_info where company_num=#{company_num}
  	</select>
  	
  	<select id="selectList_review" parameterType="com.theater.util.RowNum" resultMap="reviewDTO">
  	<!-- 	select * from
  		(select rownum r, N.* from
  		(select * from review order by drama_num desc) N)
  		where r between #{startRow} and #{lastRow} -->
  		select * from review where drama_num=#{drama_num}  order by review_date desc
  </select>
  
  <select id="selectOne_review" parameterType="int"  resultMap="reviewDTO">
 <!--  select * from review where drama_num=#{drama_num} order by review_date desc -->
 select * from REVIEW where drama_num=#{drama_num}
  </select>
  
  <select id="totalcount" parameterType="int" resultType="int">
	select COUNT(drama_num) from REVIEW where drama_num=#{drama_num}
  </select>
  
  <select id="review_avg" parameterType="int" resultType="int">
  select sum(star)/count(drama_num) from REVIEW where drama_num=#{drama_num}
  </select>
  
  <select id="qnalist" parameterType="com.theater.util.RowNum" resultMap="qnaDTO">
 		select * from qna  where drama_num=#{drama_num} order by qna_num desc
  	
  </select>
  
  	
  	
  </mapper><!-- xml과 동일한 이름으로 한다. -->
  